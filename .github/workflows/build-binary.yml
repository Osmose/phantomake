name: Build phantomake binary
on:
  push:
    tags:
      - '*'
jobs:
  build-binary-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Bun install
        run: |
          bun install
      - name: Build phantomake
        run: |
          bun run build
          tar -zcvf phantomake-linux.tar.gz phantomake
      - uses: actions/upload-artifact@v4
        with:
          name: phantomake-linux
          path: ./phantomake
      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./phantomake-linux.tar.gz
  build-binary-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Bun install
        run: |
          bun install
      - name: Build phantomake
        run: |
          # Manually call compile because we need to make a universal binary
          rm -rf node_modules/fsevents
          bun build src/cli.ts --compile --minify --target=bun-darwin-arm64 --outfile=phantomake-arm64
          bun build src/cli.ts --compile --minify --target=bun-darwin-x64 --outfile=phantomake-x64
          lipo -create -output phantomake phantomake-arm64 phantomake-x64
          tar -zcvf phantomake-macos.tar.gz phantomake
      - uses: actions/upload-artifact@v4
        with:
          name: phantomake-macos
          path: .//phantomake
      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: .//phantomake-macos.tar.gz
  build-binary-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Bun install
        run: |
          bun install
      - name: Build phantomake (Windows)
        run: |
          bun run build
          Compress-Archive -Path phantomake.exe -Destination phantomake-windows.zip
      - uses: actions/upload-artifact@v4
        with:
          name: phantomake-windows.exe
          path: .//phantomake.exe
      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: .//phantomake-windows.zip
  upload-source:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Make source tarball
        run: |
          git archive --format=tar.gz -o source.tar.gz --prefix=phantomake/ HEAD
      - name: Upload tarball to release
        uses: softprops/action-gh-release@v1
        with:
          files: source.tar.gz
